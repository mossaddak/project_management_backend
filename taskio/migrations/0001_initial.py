# Generated by Django 5.1.4 on 2025-01-02 12:39

import autoslug.fields
import dirtyfields.dirtyfields
import django.db.models.deletion
import taskio.helpers.slug_helpers
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('projectio', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Task',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uid', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False, unique=True)),
                ('title', models.CharField(blank=True, max_length=100, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('slug', autoslug.fields.AutoSlugField(editable=False, populate_from=taskio.helpers.slug_helpers.get_task_slug, unique=True)),
                ('status', models.CharField(choices=[('DRAFT', 'Draft'), ('TODO', 'To Do'), ('In_PROGRESS', 'In progress'), ('DONE', 'Done'), ('REMOVED', 'Removed')], db_index=True, default='TODO', max_length=20)),
                ('priority', models.CharField(choices=[('LOW', 'Low'), ('MEDIUM', 'Medium'), ('HIGH', 'High')], db_index=True, default='LOW', max_length=20)),
                ('due_date', models.DateTimeField(blank=True, null=True)),
                ('assigned_to', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='projectio.project')),
            ],
            options={
                'unique_together': {('project', 'assigned_to')},
            },
            bases=(dirtyfields.dirtyfields.DirtyFieldsMixin, models.Model),
        ),
    ]
